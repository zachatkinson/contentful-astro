---
import Layout from '../layouts/Layout.astro';
import {contentfulClient} from "../lib/contentful";
import type {BlogPost} from "../lib/blogPost";
import Hero from '../components/Hero/Hero.astro';
import AnimatedCallToAction from "../components/AnimatedCallToAction/AnimatedCallToAction.astro";
import KineticSlider3 from "../components/KineticSlider3/KineticSlider";
import {
    type AlphaFilterConfig,
    type TextPair,
    type BlurFilterConfig,
    type ColorMatrixFilterConfig,
    type ColorBurnBlendFilterConfig
} from "../components/KineticSlider3/filters";
const images = [
    "/images/slides/1.jpg",
    "/images/slides/2.jpg",
    "/images/slides/3.jpg",
    "/images/slides/4.jpg",
    "/images/slides/5.jpg",
];
const blurFilter: BlurFilterConfig = {
    type: 'blur',
    enabled: true,
    intensity: 1,
    quality: 16,
    resolution: 1,
    kernelSize: 5
};
const alphaFilter: AlphaFilterConfig = {
    type: 'alpha',
    enabled: true,
    intensity: 0
}

const sepiaFilter: ColorMatrixFilterConfig = {
    type: 'colorMatrix',
    enabled: true,
    intensity: 10, // Controls how strong the effect blends (7/10 = 0.7 alpha)
    preset: 'vintage' // Use the built-in sepia preset

};

const colorBurnFilter: ColorBurnBlendFilterConfig = {
    type: 'colorBurnBlend',
    enabled: true,
    intensity: 10, // 70% effect intensity (0-10 scale)
    blendStrength: 0.8 // Optional parameter for strength adjustment (0-1 scale)
};

const entries = await contentfulClient.getEntries<BlogPost>({
    content_type: "blogPost",
})

const texts:TextPair[] = [
    ["Earth", "Surface gravity‎: ‎9.807 m/s²"],
    ["Mars", "Surface gravity‎: ‎3.711 m/s²"],
    ["Venus", "Surface gravity‎: ‎8.87 m/s²"],
    ["Mars", "Surface gravity‎: ‎3.711 m/s²"],
    ["Venus", "Surface gravity‎: ‎8.87 m/s²"]
];

const posts = entries.items.map((entry) => {
    return {
        title: entry.fields.title,
        slug: entry.fields.slug,
        description: entry.fields.description,
        date: new Date(entry.fields.date).toLocaleDateString()
    }
});
---

<Layout>
    <Hero slug="landing-page-hero" sfx="glitch" id="home-hero"/>
    <AnimatedCallToAction />


    <KineticSlider3
            client:load
            images={images}
            texts={texts}
            backgroundDisplacementSpriteLocation="/images/background-displace.jpg"
            cursorDisplacementSpriteLocation="/images/cursor-displace.png"
            cursorImgEffect={true}
            cursorTextEffect={true}
            cursorScaleIntensity={0.65}
            cursorMomentum={0.14}
            imageFilters={[
                colorBurnFilter
            ]}
            textFilters={[

            ]}
            textTitleColor="white"
            textTitleSize={64}
            mobileTextTitleSize={40}
            textTitleLetterspacing={2}
            textTitleFontFamily="'Vamos', Georgia, serif"
            textSubTitleColor="white"
            textSubTitleSize={24}
            mobileTextSubTitleSize={18}
            textSubTitleLetterspacing={1}
            textSubTitleOffsetTop={10}
            mobileTextSubTitleOffsetTop={5}
            textSubTitleFontFamily="'Helvetica Neue', Arial, sans-serif"
            maxContainerShiftFraction={0.05}
            swipeScaleIntensity={2}
            transitionScaleIntensity={30}
            externalNav={false}
            buttonMode={false}
    />
    <div class="p-4 container mx-auto">
        <h2>Latest Posts</h2>
        <ul>
            {posts.map((post) => (
                    <li>
                        <a href={`/posts/${post.slug}/`}>
                            <h2>{post.title}</h2>
                        </a>
                        <time>{post.date}</time>
                        <p>{post.description}</p>
                    </li>
            ))}
        </ul>
    </div>
</Layout>